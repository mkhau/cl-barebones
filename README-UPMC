Note : pour compiler, le programme a besoin de bison & flex au lieu de yacc & lex.

Ajout : Primitive print :

print VAR; => affiche la valeur de la variable VAR :
VAR : 4

fichiers modifiés : barebones.c parser.y barebones.h scanner.l
fichier de test : modification de fibonacci.bb

Ajout : structure de contrôle procedure :

defproc PROC;
stmt_list L;
(exit ; si besoin)
endproc;

run PROC;

defproc PROC2 ( arg1 , arg2 );
(pareil)
endproc;

run PROC2 ( 42 , A );

Ajout d'arguments selon la syntaxe au dessus (et sans parenthèses
si pas d'arguments).

Le fichier testfct.bb illustre bien la mise en place des procédures.

Pour l'instant, il n'y a pas encore de valeur de retour implantée.
Utiliser res comme valeur de retour par convention.

A faire :
-> Ajouter une valeur de retour
-> Ajouter des types autres que INT
-> utiliser des tables de hachage à la place des listes chainées pour les environnements
